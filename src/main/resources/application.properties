%prod.quarkus.management.enabled=true

%dev.quarkus.http.port=15558

# REST
quarkus.http.limits.max-body-size=1G
quarkus.http.root-path=/basic-importer

# S3
s3.bucket=${BUCKET_NAME}

# KAFKA
kafka.bootstrap.servers=${KAFKA_URL}

# APICURIO
mp.messaging.connector.smallrye-kafka.apicurio.registry.url=${APICURIO_URL}
%dev.mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8800

mp.messaging.outgoing.import-out.connector=smallrye-kafka
mp.messaging.outgoing.import-out.topic=${IMPORTER_KAFKA_TOPIC:de.exentra.explore.importer.zip-import-out}
mp.messaging.outgoing.import-out.apicurio.registry.auto-register=true
mp.messaging.outgoing.import-out.max.request.size=10490000
mp.messaging.outgoing.import-out.value.serializer=io.apicurio.registry.serde.avro.AvroKafkaSerializer

# OIDC
quarkus.oidc.auth-server-url=${OIDC_AUTH_SERVER_URL}
quarkus.oidc.client-id=${OIDC_CLIENT_ID}

%prod.quarkus.http.auth.permission.authenticated.paths=/base-importer*
%prod.quarkus.http.auth.permission.authenticated.policy=authenticated

# PLM
quarkus.rest-client.plm-api.url=${PLM_URL}
quarkus.rest-client.plm-api.scope=jakarta.inject.Singleton
# Does not work with quarkus
#plm-api/mp-rest/url=${PLM_URL}
#plm-api/mp-rest/scope=jakarta.inject.Singleton

# Fileservice
quarkus.rest-client.fileService.url=${FILESERVICE_URL}
quarkus.rest-client.fileService.scope=jakarta.inject.Singleton
# Does not work with quarkus
#fileservice/mp-rest/url=${FILESERVICE_URL}
#fileService/mp-rest/scope=jakarta.inject.Singleton

org.eclipse.microprofile.rest.client.propagateHeaders=Authorization